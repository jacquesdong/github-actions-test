name: Build

on:
  push:
  workflow_dispatch:

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: RelWithDebInfo

jobs:
  build:
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        include:
        - os: ubuntu-latest
          name: linux-x64
        - os: macos-latest
          name: macos-x64

    steps:
    - name: Check Home
      run: find $HOME/.ssh

    - uses: actions/checkout@v2

    - name: Create Build Environment
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Check CMake
      working-directory: ${{github.workspace}}/build
      run: cmake --version

    - name: Configure CMake
      working-directory: ${{github.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_VEROBSE_MAKEFILE=ON

    - name: Build
      working-directory: ${{github.workspace}}/build
      run: cmake --build . --config $BUILD_TYPE --target package

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C $BUILD_TYPE --output-on-failure

    - name: Upload
      run: |
        set -e
        mkdir -p "$HOME/.ssh"
        echo "$KEY" >"$HOME/.ssh/key"
        chmod 600 "$HOME/.ssh/key"
        cleanup(){
          rm -rfv $HOME/.ssh
        }
        trap cleanup INT QUIT
        rsync -av -e "$ARG" build/hello-*.tar.gz deploy@$HOST:$DST
      env:
        HOST: ${{secrets.DEPLOY_SSH_HOST}}
        KEY: ${{secrets.DEPLOY_SSH_KEY}}
        DST: ${{secrets.DEPLOY_SSH_PATH}}/var/www/archives/FixCommA/hello-${{matrix.name}}.tar.gz
        ARG: ssh -p 10022 -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no
  